{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/taskBoard.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { store } from \"../../redux/store\";\nimport { downloadTask } from \"../../redux/tasksReducer\";\nimport \"./taskBoard.css\";\nimport SingleTask from \"./singleTask/singleTask\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskBoard() {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  // useEffect(()=>{\n  //     if (store.getState().task.tasks.length<1){\n  //         // if(!localStorage.getItem(\"tasks\")){\n  //         //     localStorage.setItem(\"tasks\",\"\")\n  //         // }\n  //    store.dispatch(\n  //             downloadTask(JSON.parse(localStorage.getItem(\"tasks\")as any))\n  //         )\n  //         setRefresh(!refresh);\n  //     }\n  // },[])\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n  const getAllTasks = async () => {\n    const allTasks = store.dispatch(downloadTask(await axios.get(\"http://localhost:4000/api/v1/taskboard/getAllTasks\")));\n    console.log(allTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskBoard\",\n    children: store.getState().task.tasks.map(item => /*#__PURE__*/_jsxDEV(SingleTask, {\n      content: item.content,\n      type: item.type\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskBoard, \"9jkjObSiUYi0qt4rQo5g/Sus/cM=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["useState","useEffect","store","downloadTask","SingleTask","axios","jsxDEV","_jsxDEV","TaskBoard","_s","refresh","setRefresh","getAllTasks","allTasks","dispatch","get","console","log","className","children","getState","task","tasks","map","item","content","type","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/taskBoard.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { store } from \"../../redux/store\";\nimport { addTask, downloadTask } from \"../../redux/tasksReducer\";\nimport \"./taskBoard.css\";\nimport { Tasks } from \"../../modal/taskModal\";\nimport SingleTask from \"./singleTask/singleTask\";\nimport axios, { all } from \"axios\";\nfunction TaskBoard(): JSX.Element {\n    const [refresh,setRefresh]=useState(false);\n    // useEffect(()=>{\n    //     if (store.getState().task.tasks.length<1){\n    //         // if(!localStorage.getItem(\"tasks\")){\n    //         //     localStorage.setItem(\"tasks\",\"\")\n    //         // }\n    //    store.dispatch(\n    //             downloadTask(JSON.parse(localStorage.getItem(\"tasks\")as any))\n    //         )\n    //         setRefresh(!refresh);\n    //     }\n    // },[])\n    useEffect(()=>{\n        getAllTasks()\n        \n        \n    },[])\n    const getAllTasks= async()=>{\n        const allTasks= store.dispatch(downloadTask(await axios.get (\"http://localhost:4000/api/v1/taskboard/getAllTasks\")))\n        console.log(allTasks)\n    }\n    return (\n        <div className=\"taskBoard\">\n\t\t\t{store.getState().task.tasks.map((item)=>(\n                <SingleTask\n            key={item.id}\n            content={item.content}\n            type={item.type}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default TaskBoard;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAAkBC,YAAY,QAAQ,0BAA0B;AAChE,OAAO,iBAAiB;AAExB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAe,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,SAASC,SAASA,CAAA,EAAgB;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,CAAC,MAAI;IACVW,WAAW,CAAC,CAAC;EAGjB,CAAC,EAAC,EAAE,CAAC;EACL,MAAMA,WAAW,GAAE,MAAAA,CAAA,KAAS;IACxB,MAAMC,QAAQ,GAAEX,KAAK,CAACY,QAAQ,CAACX,YAAY,CAAC,MAAME,KAAK,CAACU,GAAG,CAAE,oDAAoD,CAAC,CAAC,CAAC;IACpHC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACzB,CAAC;EACD,oBACIN,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EAC9BjB,KAAK,CAACkB,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACzBjB,OAAA,CAACH,UAAU;MAEfqB,OAAO,EAAED,IAAI,CAACC,OAAQ;MACtBC,IAAI,EAAEF,IAAI,CAACE;IAAK,GAFXF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGP,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAjCQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}