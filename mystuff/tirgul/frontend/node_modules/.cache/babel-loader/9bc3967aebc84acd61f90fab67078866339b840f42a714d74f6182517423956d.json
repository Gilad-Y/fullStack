{"ast":null,"code":"export class TaskState {\n  constructor() {\n    this.tasks = [];\n  }\n}\nexport let TasksActionType = /*#__PURE__*/function (TasksActionType) {\n  TasksActionType[\"addTask\"] = \"addTask\";\n  TasksActionType[\"removeTask\"] = \"removeTask\";\n  TasksActionType[\"downloadTasks\"] = \"downloadTasks\";\n  TasksActionType[\"updateTask\"] = \"updateTask\";\n  return TasksActionType;\n}({});\nexport function addTask(newTask) {\n  return {\n    type: TasksActionType.addTask,\n    payload: newTask\n  };\n}\nexport function removeTask(id) {\n  return {\n    type: TasksActionType.removeTask,\n    payload: id\n  };\n}\nexport function downloadTask(tasks) {\n  return {\n    type: TasksActionType.downloadTasks,\n    payload: tasks\n  };\n}\nexport function updateTask(updatedTask) {\n  return {\n    type: TasksActionType.updateTask,\n    payload: updatedTask\n  };\n}\nexport const TasksReducer = function () {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new TaskState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case TasksActionType.addTask:\n      newState.tasks = [...newState.tasks, action.payload];\n      break;\n    case TasksActionType.removeTask:\n      newState.tasks = [...newState.tasks].filter(item => item.id != action.payload);\n      break;\n    case TasksActionType.downloadTasks:\n      newState.tasks = action.payload;\n      break;\n    case TasksActionType.updateTask:\n      newState.tasks = [...newState.tasks];\n      break;\n  }\n  return newState;\n};\n_c = TasksReducer;\nvar _c;\n$RefreshReg$(_c, \"TasksReducer\");","map":{"version":3,"names":["TaskState","constructor","tasks","TasksActionType","addTask","newTask","type","payload","removeTask","id","downloadTask","downloadTasks","updateTask","updatedTask","TasksReducer","currentState","arguments","length","undefined","action","newState","filter","item","_c","$RefreshReg$"],"sources":["/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/redux/tasksReducer.ts"],"sourcesContent":["import axios from \"axios\";\nimport { Tasks } from \"../modal/taskModal\";\n\nexport class TaskState{\n    public tasks:Tasks[]=[];\n}\n\nexport enum TasksActionType{\n    addTask=\"addTask\",\n    removeTask=\"removeTask\",\n    downloadTasks=\"downloadTasks\",\n    updateTask=\"updateTask\",\n}\nexport interface TasksAction{\n    type:TasksActionType;\n    payload?:any;\n}\nexport function addTask(newTask:Tasks):TasksAction{\n    return{\n        type:TasksActionType.addTask,\n        payload:newTask,\n    }\n}\nexport function removeTask(id:number):TasksAction{\n    return{\n        type:TasksActionType.removeTask,\n        payload:id,\n    }\n    \n}\nexport function downloadTask(tasks:Tasks[]):TasksAction{\n    return{\n        type:TasksActionType.downloadTasks,\n        payload:tasks,\n    }\n}\nexport function updateTask(updatedTask:Tasks):TasksAction{\n    return{\n        type:TasksActionType.updateTask,\n        payload:updatedTask,\n    }\n}\nexport const TasksReducer=(\n    currentState:TaskState=new TaskState(),\n    action:TasksAction):TaskState=>{\n        const newState={...currentState};\n        switch(action.type){\n        case TasksActionType.addTask:\n            newState.tasks=[...newState.tasks, action.payload]\n            break;\n        case TasksActionType.removeTask:\n            newState.tasks=[...newState.tasks].filter(\n            (item)=>item.id != action.payload)            \n            break;\n        case TasksActionType.downloadTasks:\n            newState.tasks=action.payload;\n            break;\n            case TasksActionType.updateTask:\n                newState.tasks=[...newState.tasks]\n            break;\n    }\n    return newState;\n}\n"],"mappings":"AAGA,OAAO,MAAMA,SAAS;EAAAC,YAAA;IAAA,KACXC,KAAK,GAAS,EAAE;EAAA;AAC3B;AAEA,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAU3B,OAAO,SAASC,OAAOA,CAACC,OAAa,EAAa;EAC9C,OAAM;IACFC,IAAI,EAACH,eAAe,CAACC,OAAO;IAC5BG,OAAO,EAACF;EACZ,CAAC;AACL;AACA,OAAO,SAASG,UAAUA,CAACC,EAAS,EAAa;EAC7C,OAAM;IACFH,IAAI,EAACH,eAAe,CAACK,UAAU;IAC/BD,OAAO,EAACE;EACZ,CAAC;AAEL;AACA,OAAO,SAASC,YAAYA,CAACR,KAAa,EAAa;EACnD,OAAM;IACFI,IAAI,EAACH,eAAe,CAACQ,aAAa;IAClCJ,OAAO,EAACL;EACZ,CAAC;AACL;AACA,OAAO,SAASU,UAAUA,CAACC,WAAiB,EAAa;EACrD,OAAM;IACFP,IAAI,EAACH,eAAe,CAACS,UAAU;IAC/BL,OAAO,EAACM;EACZ,CAAC;AACL;AACA,OAAO,MAAMC,YAAY,GAAC,SAAAA,CAAA,EAES;EAAA,IAD/BC,YAAsB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAIhB,SAAS,CAAC,CAAC;EAAA,IACtCmB,MAAkB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACd,MAAME,QAAQ,GAAC;IAAC,GAAGL;EAAY,CAAC;EAChC,QAAOI,MAAM,CAACb,IAAI;IAClB,KAAKH,eAAe,CAACC,OAAO;MACxBgB,QAAQ,CAAClB,KAAK,GAAC,CAAC,GAAGkB,QAAQ,CAAClB,KAAK,EAAEiB,MAAM,CAACZ,OAAO,CAAC;MAClD;IACJ,KAAKJ,eAAe,CAACK,UAAU;MAC3BY,QAAQ,CAAClB,KAAK,GAAC,CAAC,GAAGkB,QAAQ,CAAClB,KAAK,CAAC,CAACmB,MAAM,CACxCC,IAAI,IAAGA,IAAI,CAACb,EAAE,IAAIU,MAAM,CAACZ,OAAO,CAAC;MAClC;IACJ,KAAKJ,eAAe,CAACQ,aAAa;MAC9BS,QAAQ,CAAClB,KAAK,GAACiB,MAAM,CAACZ,OAAO;MAC7B;IACA,KAAKJ,eAAe,CAACS,UAAU;MAC3BQ,QAAQ,CAAClB,KAAK,GAAC,CAAC,GAAGkB,QAAQ,CAAClB,KAAK,CAAC;MACtC;EACR;EACA,OAAOkB,QAAQ;AACnB,CAAC;AAAAG,EAAA,GApBYT,YAAY;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}