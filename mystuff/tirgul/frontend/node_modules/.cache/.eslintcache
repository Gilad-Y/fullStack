[{"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/index.tsx":"1","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/reportWebVitals.ts":"2","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/mainLayout/mainLayout.tsx":"3","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Header/Header.tsx":"4","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Footer/Footer.tsx":"5","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Home/Home.tsx":"6","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Menu/Menu.tsx":"7","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Sum/Sum.tsx":"8","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/redux/store.ts":"9","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Routs/mainRout/mainRout.tsx":"10","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/redux/tasksReducer.ts":"11","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/taskBoard.tsx":"12","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/createTask/createTask.tsx":"13","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/pageNotFound/pageNotFound.tsx":"14","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/singleTask/singleTask.tsx":"15","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/updateTaskPage/updateTaskPage.tsx":"16"},{"size":645,"mtime":1683740832205,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1683735064864,"results":"19","hashOfConfig":"18"},{"size":696,"mtime":1683739765336,"results":"20","hashOfConfig":"18"},{"size":177,"mtime":1683737400468,"results":"21","hashOfConfig":"18"},{"size":440,"mtime":1683744744887,"results":"22","hashOfConfig":"18"},{"size":212,"mtime":1683740594748,"results":"23","hashOfConfig":"18"},{"size":381,"mtime":1685192077547,"results":"24","hashOfConfig":"18"},{"size":388,"mtime":1683913629809,"results":"25","hashOfConfig":"18"},{"size":354,"mtime":1683916728705,"results":"26","hashOfConfig":"18"},{"size":796,"mtime":1685195446969,"results":"27","hashOfConfig":"18"},{"size":1640,"mtime":1685203868201,"results":"28","hashOfConfig":"18"},{"size":1296,"mtime":1685200457864,"results":"29","hashOfConfig":"18"},{"size":1743,"mtime":1685192541285,"results":"30","hashOfConfig":"18"},{"size":182,"mtime":1683743783849,"results":"31","hashOfConfig":"18"},{"size":1674,"mtime":1685196217335,"results":"32","hashOfConfig":"18"},{"size":2629,"mtime":1688679570868,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"q5lzdy",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/index.tsx",[],[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/reportWebVitals.ts",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/mainLayout/mainLayout.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Header/Header.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Footer/Footer.tsx",["87"],[],"import { useEffect, useState } from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer(): JSX.Element {\n    const [thisTime,setTime]=useState(\"\");\n    useEffect(()=>{\n        const dateInterval=setInterval(()=>{\n            setTime(new Date().toLocaleDateString('he-IL'));\n        },1000)\n    },[])\n   \n    \n    return (\n        <div className=\"Footer\">\n\t\t\tthis site made by Gilad | {thisTime}\n        </div>\n    );\n}\n\nexport default Footer;\n","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Home/Home.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Menu/Menu.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Layouts/Sum/Sum.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/redux/store.ts",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Routs/mainRout/mainRout.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/redux/tasksReducer.ts",["88","89"],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/taskBoard.tsx",["90","91","92","93"],[],"import { useState, useEffect } from \"react\";\nimport { store } from \"../../redux/store\";\nimport { addTask, downloadTask, removeTask } from \"../../redux/tasksReducer\";\nimport \"./taskBoard.css\";\nimport { Tasks } from \"../../modal/taskModal\";\nimport SingleTask from \"./singleTask/singleTask\";\nimport axios, { all } from \"axios\";\nfunction TaskBoard(): JSX.Element {\n    const [refresh,setRefresh]=useState(false);\n    useEffect(()=>{\n        axios.get \n        (\"http://localhost:4000/api/v1/taskboard/getAllTasks\") \n        .then((response)=>response.data)\n        .then((result)=>{\n            store.dispatch(downloadTask(result))\n            setRefresh(!refresh)\n        })\n    },[])\n  \n    const deleteTask=(id:number)=>{\n        console.log(id);\n      axios\n      .delete(`http://localhost:4000/api/v1/taskboard/deleteTask/${id}`)\n      .then(()=>{\n        store.dispatch(removeTask(id))\n        setRefresh(!refresh)\n    }\n        )}\n    return (\n        <div className=\"taskBoard\">\n\t\t\t{store.getState().task.tasks.map((item)=>(\n                <SingleTask\n            key={item.id}\n            id={item.id}\n            content={item.content}\n            type={item.type}\n            onDeleteTask={deleteTask}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default TaskBoard;\n","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/createTask/createTask.tsx",["94","95","96"],[],"import \"./createTask.css\";\nimport { Tasks } from \"../../modal/taskModal\";\nimport { store } from \"../../redux/store\";\nimport { addTask } from \"../../redux/tasksReducer\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nfunction CreateTask(): JSX.Element {\n    const {register,control,handleSubmit}=useForm<Tasks>();\n    const onSubmit=(data:Tasks)=>{\n        if( data.type==\"chose task importance\"){\n            alert(\"choose another type\")\n        }else{\n        axios.\n        post(\"http://localhost:4000/api/v1/taskboard/addNewTask\",data) \n        console.log(data);\n        store.dispatch(addTask(data));\n    }}\n    // if(!localStorage.getItem(\"tasks\")){\n    // localStorage.setItem(\"tasks\",JSON.stringify(store.getState().task.tasks))\n    // }\n    return (\n        <div className=\"createTask\">\n\t\t\tcreate task\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <h1> add new task!</h1>\n                <textarea placeholder=\"enter the task right here!!!\"\n                {...register(\"content\")}\n                ></textarea>\n                <br/>\n                <select\n                style={{height:\"40px\",width:\"260px\",marginTop:\"10px\",marginBottom:\"10px\"}} \n                {...register(\"type\")}>\n                    <option disabled selected>chose task importance</option>\n                    <option>urgent</option>\n                    <option>important</option>\n                    <option>negligible</option>\n                </select>\n                <br/>\n                <input type=\"reset\" style={{background:\"lightyellow\"}}/>\n                <input type=\"submit\" \n                style={{background:\"lightgreen\"}}/>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateTask;\n","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/pageNotFound/pageNotFound.tsx",[],[],"/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/taskBoard/singleTask/singleTask.tsx",["97","98","99"],[],"import \"./singleTask.css\";\nimport background from '../../../../img/notebg.png';\nimport { Button, IconButton } from \"@mui/material\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { type } from \"os\";\nimport { useNavigate } from \"react-router\";\n\ninterface itemProps{\n    id:number;\n    content:string;\n    type:string;\n    onDeleteTask:(id: number) => void;\n}\nfunction SingleTask(props:itemProps): JSX.Element {\n    const navigate=useNavigate();\n    const handleDeleteTask=(id:number)=>{\n        props.onDeleteTask(id)\n    }\n    let type;\n    switch(props.type){\n        case \"urgent\":\n             type =\"urgent\"\n        break;\n        case \"important\":\n             type =\"important\"\n        break;\n        case \"negligible\":\n             type =\"negligible\"\n        break;\n         default:\n        \n         break;\n    }\n    const handleDoubleClick=(id:number)=>{\n        console.log(id)\n        navigate(`/updateTask/${id}`)\n    }\n    return (\n        <div className=\"singleTask box\" style={{backgroundImage:`url(${background})`}}>\n            \n            <IconButton aria-label=\"delete\" \n            onClick={()=>handleDeleteTask(props.id)}\n            style={{ position: 'absolute', top: 0, right: 0,paddingTop:20}}>\n  <DeleteOutlineIcon\n/>\n</IconButton>\n<br/>\n<div className=\"taskInfo\"\n onDoubleClick={()=>handleDoubleClick(+props.id)} >\n\t\t\t{props.content}\n            <br/>\n            <div className={type}>\n            {props.type}\n            </div>\n            <br/>\n            </div>\n        </div>\n    );\n}\n\nexport default SingleTask;\n\n\n\nfunction setInputValue(content: string) {\n    throw new Error(\"Function not implemented.\");\n}\n\n","/Users/gilad/Desktop/jhon_bryce/fullStack/mystuff/tirgul/frontend/src/Components/Pages/updateTaskPage/updateTaskPage.tsx",["100","101","102","103"],[],{"ruleId":"104","severity":1,"message":"105","line":7,"column":15,"nodeType":"106","messageId":"107","endLine":7,"endColumn":27},{"ruleId":"104","severity":1,"message":"108","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":53,"column":29,"nodeType":"111","messageId":"112","endLine":53,"endColumn":31},{"ruleId":"104","severity":1,"message":"113","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":17},{"ruleId":"104","severity":1,"message":"114","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":15},{"ruleId":"104","severity":1,"message":"115","line":7,"column":17,"nodeType":"106","messageId":"107","endLine":7,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":18,"column":7,"nodeType":"118","endLine":18,"endColumn":9,"suggestions":"119"},{"ruleId":"104","severity":1,"message":"120","line":9,"column":21,"nodeType":"106","messageId":"107","endLine":9,"endColumn":28},{"ruleId":"109","severity":1,"message":"121","line":11,"column":22,"nodeType":"111","messageId":"112","endLine":11,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":14,"column":14,"nodeType":"124","messageId":"125","endLine":14,"endColumn":15,"fix":"126"},{"ruleId":"104","severity":1,"message":"127","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"128","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"129","line":65,"column":10,"nodeType":"106","messageId":"107","endLine":65,"endColumn":23},{"ruleId":"104","severity":1,"message":"130","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"131","line":13,"column":12,"nodeType":"106","messageId":"107","endLine":13,"endColumn":19},{"ruleId":"104","severity":1,"message":"132","line":13,"column":20,"nodeType":"106","messageId":"107","endLine":13,"endColumn":30},{"ruleId":"104","severity":1,"message":"120","line":17,"column":21,"nodeType":"106","messageId":"107","endLine":17,"endColumn":28},"@typescript-eslint/no-unused-vars","'dateInterval' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'addTask' is defined but never used.","'Tasks' is defined but never used.","'all' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.","ArrayExpression",["133"],"'control' is assigned a value but never used.","Expected '===' and instead saw '=='.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"134","text":"135"},"'Button' is defined but never used.","'type' is defined but never used.","'setInputValue' is defined but never used.","'wait' is defined but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.",{"desc":"136","fix":"137"},[490,500],"\n        .","Update the dependencies array to be: [refresh]",{"range":"138","text":"139"},[678,680],"[refresh]"]